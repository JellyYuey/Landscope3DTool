{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21064\\\\Desktop\\\\frontend\\\\src\\\\ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null); // 渲染容器引用\n  const sceneRef = useRef(null); // 场景引用\n  const cameraRef = useRef(null); // 相机引用\n  const rendererRef = useRef(null); // 渲染器引用\n  const [objects, setObjects] = useState([]); // 场景中的可拖动物体\n  const selectedObjectRef = useRef(null); // 当前选中的物体\n  const dragPlaneRef = useRef(null); // 拖拽平面\n\n  useEffect(() => {\n    // 初始化场景、相机、渲染器\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xa0a0a0);\n    sceneRef.current = scene;\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(10, 10, 20);\n    cameraRef.current = camera;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    rendererRef.current = renderer;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(10, 20, 10);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // 添加地面\n    const planeGeometry = new THREE.PlaneGeometry(100, 100);\n    const planeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x808080\n    });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.rotation.x = -Math.PI / 2;\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    // 创建拖拽辅助平面\n    const dragPlane = new THREE.Plane(new THREE.Vector3(0, 1, 0), 0); // 水平平面\n    dragPlaneRef.current = dragPlane;\n\n    // 初始化轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 清理函数\n    return () => {\n      renderer.dispose();\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  // 鼠标拾取和拖动逻辑\n  useEffect(() => {\n    const renderer = rendererRef.current;\n    const scene = sceneRef.current;\n    const camera = cameraRef.current;\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    let isDragging = false;\n\n    // 鼠标点击事件\n    const onMouseDown = event => {\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(objects);\n      if (intersects.length > 0) {\n        // 选中物体\n        selectedObjectRef.current = intersects[0].object;\n        isDragging = true;\n      }\n    };\n\n    // 鼠标移动事件（拖动物体）\n    const onMouseMove = event => {\n      if (isDragging && selectedObjectRef.current) {\n        mouse.x = event.clientX / window.innerWidth * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        raycaster.setFromCamera(mouse, camera);\n        const dragPlane = dragPlaneRef.current;\n        const intersection = new THREE.Vector3();\n        if (raycaster.ray.intersectPlane(dragPlane, intersection)) {\n          selectedObjectRef.current.position.copy(intersection);\n        }\n      }\n    };\n\n    // 鼠标释放事件\n    const onMouseUp = () => {\n      isDragging = false;\n      selectedObjectRef.current = null;\n    };\n\n    // 添加事件监听器\n    renderer.domElement.addEventListener(\"mousedown\", onMouseDown);\n    renderer.domElement.addEventListener(\"mousemove\", onMouseMove);\n    renderer.domElement.addEventListener(\"mouseup\", onMouseUp);\n\n    // 清理事件监听器\n    return () => {\n      renderer.domElement.removeEventListener(\"mousedown\", onMouseDown);\n      renderer.domElement.removeEventListener(\"mousemove\", onMouseMove);\n      renderer.domElement.removeEventListener(\"mouseup\", onMouseUp);\n    };\n  }, [objects]);\n\n  // 添加物体\n  const addObject = () => {\n    const scene = sceneRef.current;\n    const boxGeometry = new THREE.BoxGeometry(2, 2, 2);\n    const boxMaterial = new THREE.MeshStandardMaterial({\n      color: Math.random() * 0xffffff\n    });\n    const box = new THREE.Mesh(boxGeometry, boxMaterial);\n    box.position.set(Math.random() * 10 - 5, 1, Math.random() * 10 - 5);\n    box.castShadow = true;\n    scene.add(box);\n    setObjects(prev => [...prev, box]); // 更新物体列表\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addObject,\n        children: \"\\u6DFB\\u52A0\\u7269\\u4F53\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeScene, \"rYW8ewzMoTtTo2w5btWGiv+rO0o=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","sceneRef","cameraRef","rendererRef","objects","setObjects","selectedObjectRef","dragPlaneRef","scene","Scene","background","Color","current","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","planeGeometry","PlaneGeometry","planeMaterial","MeshStandardMaterial","color","plane","Mesh","rotation","x","Math","PI","receiveShadow","dragPlane","Plane","Vector3","controls","enableDamping","animate","requestAnimationFrame","update","render","dispose","removeChild","raycaster","Raycaster","mouse","Vector2","isDragging","onMouseDown","event","clientX","y","clientY","setFromCamera","intersects","intersectObjects","length","object","onMouseMove","intersection","ray","intersectPlane","copy","onMouseUp","addEventListener","removeEventListener","addObject","boxGeometry","BoxGeometry","boxMaterial","random","box","prev","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","onClick","_c","$RefreshReg$"],"sources":["C:/Users/21064/Desktop/frontend/src/ThreeScene.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nconst ThreeScene = () => {\r\n  const mountRef = useRef(null); // 渲染容器引用\r\n  const sceneRef = useRef(null); // 场景引用\r\n  const cameraRef = useRef(null); // 相机引用\r\n  const rendererRef = useRef(null); // 渲染器引用\r\n  const [objects, setObjects] = useState([]); // 场景中的可拖动物体\r\n  const selectedObjectRef = useRef(null); // 当前选中的物体\r\n  const dragPlaneRef = useRef(null); // 拖拽平面\r\n\r\n  useEffect(() => {\r\n    // 初始化场景、相机、渲染器\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xa0a0a0);\r\n    sceneRef.current = scene;\r\n\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(10, 10, 20);\r\n    cameraRef.current = camera;\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    rendererRef.current = renderer;\r\n\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // 添加光源\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(10, 20, 10);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // 添加地面\r\n    const planeGeometry = new THREE.PlaneGeometry(100, 100);\r\n    const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });\r\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n    plane.rotation.x = -Math.PI / 2;\r\n    plane.receiveShadow = true;\r\n    scene.add(plane);\r\n\r\n    // 创建拖拽辅助平面\r\n    const dragPlane = new THREE.Plane(new THREE.Vector3(0, 1, 0), 0); // 水平平面\r\n    dragPlaneRef.current = dragPlane;\r\n\r\n    // 初始化轨道控制器\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n\r\n    // 动画循环\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 清理函数\r\n    return () => {\r\n      renderer.dispose();\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  // 鼠标拾取和拖动逻辑\r\n  useEffect(() => {\r\n    const renderer = rendererRef.current;\r\n    const scene = sceneRef.current;\r\n    const camera = cameraRef.current;\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n    let isDragging = false;\r\n\r\n    // 鼠标点击事件\r\n    const onMouseDown = (event) => {\r\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(objects);\r\n\r\n      if (intersects.length > 0) {\r\n        // 选中物体\r\n        selectedObjectRef.current = intersects[0].object;\r\n        isDragging = true;\r\n      }\r\n    };\r\n\r\n    // 鼠标移动事件（拖动物体）\r\n    const onMouseMove = (event) => {\r\n      if (isDragging && selectedObjectRef.current) {\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        raycaster.setFromCamera(mouse, camera);\r\n\r\n        const dragPlane = dragPlaneRef.current;\r\n        const intersection = new THREE.Vector3();\r\n\r\n        if (raycaster.ray.intersectPlane(dragPlane, intersection)) {\r\n          selectedObjectRef.current.position.copy(intersection);\r\n        }\r\n      }\r\n    };\r\n\r\n    // 鼠标释放事件\r\n    const onMouseUp = () => {\r\n      isDragging = false;\r\n      selectedObjectRef.current = null;\r\n    };\r\n\r\n    // 添加事件监听器\r\n    renderer.domElement.addEventListener(\"mousedown\", onMouseDown);\r\n    renderer.domElement.addEventListener(\"mousemove\", onMouseMove);\r\n    renderer.domElement.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n    // 清理事件监听器\r\n    return () => {\r\n      renderer.domElement.removeEventListener(\"mousedown\", onMouseDown);\r\n      renderer.domElement.removeEventListener(\"mousemove\", onMouseMove);\r\n      renderer.domElement.removeEventListener(\"mouseup\", onMouseUp);\r\n    };\r\n  }, [objects]);\r\n\r\n  // 添加物体\r\n  const addObject = () => {\r\n    const scene = sceneRef.current;\r\n\r\n    const boxGeometry = new THREE.BoxGeometry(2, 2, 2);\r\n    const boxMaterial = new THREE.MeshStandardMaterial({ color: Math.random() * 0xffffff });\r\n    const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n    box.position.set(Math.random() * 10 - 5, 1, Math.random() * 10 - 5);\r\n    box.castShadow = true;\r\n\r\n    scene.add(box);\r\n    setObjects((prev) => [...prev, box]); // 更新物体列表\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100vh\" }} />\r\n      <div style={{ position: \"absolute\", top: 10, left: 10 }}>\r\n        <button onClick={addObject}>添加物体</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}