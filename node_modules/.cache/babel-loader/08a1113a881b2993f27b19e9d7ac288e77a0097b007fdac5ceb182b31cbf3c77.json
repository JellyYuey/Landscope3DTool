{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\nimport { StaticDrawUsage, FloatType } from '../constants.js';\nimport { fromHalfFloat, toHalfFloat } from '../extras/DataUtils.js';\nconst _vector = /*@__PURE__*/new Vector3();\nconst _vector2 = /*@__PURE__*/new Vector2();\nclass BufferAttribute {\n  constructor(array, itemSize, normalized = false) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n    this.isBufferAttribute = true;\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized;\n    this.usage = StaticDrawUsage;\n    this.updateRanges = [];\n    this.gpuType = FloatType;\n    this.version = 0;\n  }\n  onUploadCallback() {}\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  setUsage(value) {\n    this.usage = value;\n    return this;\n  }\n  addUpdateRange(start, count) {\n    this.updateRanges.push({\n      start,\n      count\n    });\n  }\n  clearUpdateRanges() {\n    this.updateRanges.length = 0;\n  }\n  copy(source) {\n    this.name = source.name;\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n    this.usage = source.usage;\n    this.gpuType = source.gpuType;\n    return this;\n  }\n  copyAt(index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n    for (let i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n    return this;\n  }\n  copyArray(array) {\n    this.array.set(array);\n    return this;\n  }\n  applyMatrix3(m) {\n    if (this.itemSize === 2) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector2.fromBufferAttribute(this, i);\n        _vector2.applyMatrix3(m);\n        this.setXY(i, _vector2.x, _vector2.y);\n      }\n    } else if (this.itemSize === 3) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector.fromBufferAttribute(this, i);\n        _vector.applyMatrix3(m);\n        this.setXYZ(i, _vector.x, _vector.y, _vector.z);\n      }\n    }\n    return this;\n  }\n  applyMatrix4(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector.fromBufferAttribute(this, i);\n      _vector.applyMatrix4(m);\n      this.setXYZ(i, _vector.x, _vector.y, _vector.z);\n    }\n    return this;\n  }\n  applyNormalMatrix(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector.fromBufferAttribute(this, i);\n      _vector.applyNormalMatrix(m);\n      this.setXYZ(i, _vector.x, _vector.y, _vector.z);\n    }\n    return this;\n  }\n  transformDirection(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector.fromBufferAttribute(this, i);\n      _vector.transformDirection(m);\n      this.setXYZ(i, _vector.x, _vector.y, _vector.z);\n    }\n    return this;\n  }\n  set(value, offset = 0) {\n    // Matching BufferAttribute constructor, do not normalize the array.\n    this.array.set(value, offset);\n    return this;\n  }\n  getComponent(index, component) {\n    let value = this.array[index * this.itemSize + component];\n    if (this.normalized) value = denormalize(value, this.array);\n    return value;\n  }\n  setComponent(index, component, value) {\n    if (this.normalized) value = normalize(value, this.array);\n    this.array[index * this.itemSize + component] = value;\n    return this;\n  }\n  getX(index) {\n    let x = this.array[index * this.itemSize];\n    if (this.normalized) x = denormalize(x, this.array);\n    return x;\n  }\n  setX(index, x) {\n    if (this.normalized) x = normalize(x, this.array);\n    this.array[index * this.itemSize] = x;\n    return this;\n  }\n  getY(index) {\n    let y = this.array[index * this.itemSize + 1];\n    if (this.normalized) y = denormalize(y, this.array);\n    return y;\n  }\n  setY(index, y) {\n    if (this.normalized) y = normalize(y, this.array);\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  }\n  getZ(index) {\n    let z = this.array[index * this.itemSize + 2];\n    if (this.normalized) z = denormalize(z, this.array);\n    return z;\n  }\n  setZ(index, z) {\n    if (this.normalized) z = normalize(z, this.array);\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  }\n  getW(index) {\n    let w = this.array[index * this.itemSize + 3];\n    if (this.normalized) w = denormalize(w, this.array);\n    return w;\n  }\n  setW(index, w) {\n    if (this.normalized) w = normalize(w, this.array);\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  }\n  setXY(index, x, y) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  }\n  setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  }\n  setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n      w = normalize(w, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  }\n  onUpload(callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n  clone() {\n    return new this.constructor(this.array, this.itemSize).copy(this);\n  }\n  toJSON() {\n    const data = {\n      itemSize: this.itemSize,\n      type: this.array.constructor.name,\n      array: Array.from(this.array),\n      normalized: this.normalized\n    };\n    if (this.name !== '') data.name = this.name;\n    if (this.usage !== StaticDrawUsage) data.usage = this.usage;\n    return data;\n  }\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int8Array(array), itemSize, normalized);\n  }\n}\nclass Uint8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8Array(array), itemSize, normalized);\n  }\n}\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8ClampedArray(array), itemSize, normalized);\n  }\n}\nclass Int16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int16Array(array), itemSize, normalized);\n  }\n}\nclass Uint16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n  }\n}\nclass Int32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int32Array(array), itemSize, normalized);\n  }\n}\nclass Uint32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint32Array(array), itemSize, normalized);\n  }\n}\nclass Float16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n    this.isFloat16BufferAttribute = true;\n  }\n  getX(index) {\n    let x = fromHalfFloat(this.array[index * this.itemSize]);\n    if (this.normalized) x = denormalize(x, this.array);\n    return x;\n  }\n  setX(index, x) {\n    if (this.normalized) x = normalize(x, this.array);\n    this.array[index * this.itemSize] = toHalfFloat(x);\n    return this;\n  }\n  getY(index) {\n    let y = fromHalfFloat(this.array[index * this.itemSize + 1]);\n    if (this.normalized) y = denormalize(y, this.array);\n    return y;\n  }\n  setY(index, y) {\n    if (this.normalized) y = normalize(y, this.array);\n    this.array[index * this.itemSize + 1] = toHalfFloat(y);\n    return this;\n  }\n  getZ(index) {\n    let z = fromHalfFloat(this.array[index * this.itemSize + 2]);\n    if (this.normalized) z = denormalize(z, this.array);\n    return z;\n  }\n  setZ(index, z) {\n    if (this.normalized) z = normalize(z, this.array);\n    this.array[index * this.itemSize + 2] = toHalfFloat(z);\n    return this;\n  }\n  getW(index) {\n    let w = fromHalfFloat(this.array[index * this.itemSize + 3]);\n    if (this.normalized) w = denormalize(w, this.array);\n    return w;\n  }\n  setW(index, w) {\n    if (this.normalized) w = normalize(w, this.array);\n    this.array[index * this.itemSize + 3] = toHalfFloat(w);\n    return this;\n  }\n  setXY(index, x, y) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    return this;\n  }\n  setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    this.array[index + 2] = toHalfFloat(z);\n    return this;\n  }\n  setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n      w = normalize(w, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    this.array[index + 2] = toHalfFloat(z);\n    this.array[index + 3] = toHalfFloat(w);\n    return this;\n  }\n}\nclass Float32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Float32Array(array), itemSize, normalized);\n  }\n}\n\n//\n\nexport { Float32BufferAttribute, Float16BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute };","map":{"version":3,"names":["Vector3","Vector2","denormalize","normalize","StaticDrawUsage","FloatType","fromHalfFloat","toHalfFloat","_vector","_vector2","BufferAttribute","constructor","array","itemSize","normalized","Array","isArray","TypeError","isBufferAttribute","name","count","undefined","length","usage","updateRanges","gpuType","version","onUploadCallback","needsUpdate","value","setUsage","addUpdateRange","start","push","clearUpdateRanges","copy","source","copyAt","index1","attribute","index2","i","l","copyArray","set","applyMatrix3","m","fromBufferAttribute","setXY","x","y","setXYZ","z","applyMatrix4","applyNormalMatrix","transformDirection","offset","getComponent","index","component","setComponent","getX","setX","getY","setY","getZ","setZ","getW","w","setW","setXYZW","onUpload","callback","clone","toJSON","data","type","from","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array"],"sources":["C:/Users/21064/Desktop/frontend/node_modules/three/src/core/BufferAttribute.js"],"sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\nimport { StaticDrawUsage, FloatType } from '../constants.js';\nimport { fromHalfFloat, toHalfFloat } from '../extras/DataUtils.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n//\n\nexport {\n\tFloat32BufferAttribute,\n\tFloat16BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}