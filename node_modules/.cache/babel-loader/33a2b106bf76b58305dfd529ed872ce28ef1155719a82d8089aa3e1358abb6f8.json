{"ast":null,"code":"import * as THREE from \"three\";\n/*************************************************************************************\n * CLASS NAME:  CustomizeTree\n * DESCRIPTION: 整合各种treeObj\n * NOTE:\n *\n *************************************************************************************/\nclass CustomizeTree {\n  constructor() {\n    this.indices = new Map([[\"普通乔木\", 0], [\"桂花\", 1], [\"国槐\", 2], [\"木芙蓉\", 3], [\"八棱海棠\", 4], [\"红枫\", 5], [\"桃树\", 6], [\"垂丝海棠\", 7], [\"丁香\", 8], [\"凤凰木\", 9], [\"水杉\", 10], [\"落叶松\", 11]\n    // [\"海棠\", 10],\n    // [\"红果冬青\", 11],\n    ]);\n    this.content = [{\n      name: \"普通乔木\",\n      path: \"resources/images/ordinarytree/\",\n      depth: 2,\n      disturb: 0.08,\n      gravity: 0,\n      shrink: {\n        single: 0.4,\n        multi: 0.4,\n        root: true\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"cross\",\n          width: 0.7,\n          height: 1\n        },\n        scale: 3,\n        alpha_test: 0.25\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 18, 0),\n        radius: 0.6,\n        sub_branches: [\n        // [ sub_branches_position, noise1, sub_branches_angle, noise2, next_level_length, noise3, number ]\n        [0.4, 0.1, Math.PI / 2.5, Math.PI / 36, 7, 0.5, 3]\n        // [0.6, 0.05, Math.PI / 3, 0, 6, 0.5, 3],\n        // [0.8, 0.05, Math.PI / 3, 0, 5, 0.5, 3],\n        // [0.95, 0, 0, 0, 4, 0.5, 1],\n        ]\n      },\n      // middle node\n      {\n        sub_branches: [[0.6, 0.2, Math.PI / 4, Math.PI / 36, 4, 0.5, 5], [0.9, 0, 0, 0, 3, 0.5, 1]]\n      },\n      // leaf node\n      {\n        leaves: [\n        // [ leaves_position, noise1, leaves_angle, noise2, number]\n        [0.6, 0.35, Math.PI / 4, 0, 3], [0.95, 0, 0, 0, 1]]\n      }]\n    }, {\n      name: \"桂花\",\n      path: \"resources/images/guihua/\",\n      depth: 4,\n      disturb: 0.02,\n      gravity: 0,\n      shrink: {\n        single: 0.4,\n        multi: 0.5,\n        root: true\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.01,\n      leaf: {\n        geometry: {\n          style: \"cross\",\n          width: 1,\n          height: 1\n        },\n        scale: 0.8,\n        alpha_test: 0.2\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 8, 0),\n        radius: 0.3,\n        sub_branches: [[0.6, 0.3, Math.PI / 5, Math.PI / 36, 4, 0.5, 5]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 3, 0.5, 5]]\n      }, {\n        sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 2, 0.5, 2]]\n      }, {\n        sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 1, 0.5, 3]]\n      },\n      // leaf node\n      {\n        leaves: [[0.8, 0.2, Math.PI / 6, 0, 5]]\n      }]\n    }, {\n      name: \"国槐\",\n      path: \"resources/images/guohuai/\",\n      depth: 5,\n      disturb: 0.03,\n      gravity: 0.07,\n      shrink: {\n        single: 0.4,\n        multi: 0.45,\n        root: true\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.01,\n      leaf: {\n        geometry: {\n          style: \"cross\",\n          width: 0.5,\n          height: 1,\n          foldDegree: 0.3\n        },\n        scale: 0.6,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 15, 0),\n        radius: 0.7,\n        sub_branches: [[0.5, 0.1, Math.PI / 3, Math.PI / 36, 7, 0.5, 5], [0.8, 0.1, Math.PI / 4, Math.PI / 36, 6, 0.5, 3], [0.95, 0, 0, 0, 5, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.6, 0.2, Math.PI / 5, Math.PI / 36, 3, 0.5, 3], [0.95, 0, 0, 0, 3, 0.5, 1]]\n      }, {\n        sub_branches: [[0.6, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3]]\n      }, {\n        sub_branches: [[0.6, 0.3, Math.PI / 5, Math.PI / 36, 1, 0.5, 3]]\n      }, {\n        sub_branches: [[0.5, 0.4, Math.PI / 5, Math.PI / 36, 2, 0, 3], [0.95, 0, 0, 0, 2, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.6, 0.4, Math.PI / 5, 0, 6]]\n      }]\n    }, {\n      name: \"木芙蓉\",\n      path: \"resources/images/mufurong/\",\n      depth: 4,\n      disturb: 0.03,\n      gravity: 0.1,\n      shrink: {\n        single: 0.2,\n        multi: 0.45,\n        root: false\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0,\n      leaf: {\n        geometry: {\n          style: \"surround\",\n          width: 1,\n          height: 1\n        },\n        scale: 0.15,\n        alpha_test: 0.5\n      },\n      flower: {\n        scale: 0.08,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, -0.1, 0),\n        end: new THREE.Vector3(0, 0, 0),\n        radius: 0.3,\n        sub_branches: [[0.7, 0.1, Math.PI / 11, Math.PI / 36, 3, 0.5, 4]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 2, 0.5, 3]]\n      }, {\n        sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 1, 0.5, 3]]\n      }, {\n        sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 0.8, 0.2, 3]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 3]]\n      }]\n    }, {\n      name: \"八棱海棠\",\n      path: \"resources/images/8leng/\",\n      depth: 3,\n      disturb: 0.05,\n      gravity: -0.1,\n      shrink: {\n        single: 0.2,\n        multi: 0.3,\n        root: false\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 0.5,\n          height: 1\n        },\n        scale: 0.2,\n        alpha_test: 0.2\n      },\n      flower: {\n        scale: 0.08,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 7, 0),\n        radius: 0.25,\n        sub_branches: [[0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6], [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4], [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4], [0.85, 0, 0, 0, 1, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2], [0.9, 0, 0, 0, 1, 0.5, 1]]\n      }, {\n        sub_branches: [[0.5, 0.2, Math.PI / 6, 0, 1, 0, 3], [0.9, 0, 0, 0, 0.7, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n        flowers: [[0.9, 0, 0, 0, 1]]\n      }]\n    }, {\n      name: \"红枫\",\n      path: \"resources/images/hongfeng/\",\n      depth: 3,\n      disturb: 0.02,\n      gravity: -0.2,\n      shrink: {\n        single: 0.2,\n        multi: 0.35,\n        root: true\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 1,\n          height: 1\n        },\n        scale: 0.4,\n        alpha_test: 0.2\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 9, 0),\n        radius: 0.25,\n        sub_branches: [[0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6], [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4], [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4], [0.8, 0, 0, 0, 1, 0, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2], [0.9, 0, 0, 0, 1, 0.5, 1]]\n      }, {\n        sub_branches: [[0.5, 0.2, Math.PI / 6, 0, 1, 0, 3], [0.9, 0, 0, 0, 0.7, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]]\n      }]\n    }, {\n      name: \"桃树\",\n      path: \"resources/images/peach/\",\n      depth: 3,\n      disturb: 0.02,\n      gravity: -0.2,\n      shrink: {\n        single: 0.2,\n        multi: 0.3,\n        root: false\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 0.5,\n          height: 1\n        },\n        scale: 0.2,\n        alpha_test: 0.2\n      },\n      flower: {\n        scale: 0.08,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 7, 0),\n        radius: 0.25,\n        sub_branches: [[0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6], [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4], [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4], [0.85, 0, 0, 0, 1, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2], [0.9, 0, 0, 0, 1, 0.5, 1]]\n      }, {\n        sub_branches: [[0.5, 0.2, Math.PI / 6, 0, 1, 0, 3], [0.9, 0, 0, 0, 0.7, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n        flowers: [[0.9, 0, 0, 0, 1]]\n      }]\n    }, {\n      name: \"垂丝海棠\",\n      path: \"resources/images/chuisi/\",\n      depth: 3,\n      disturb: 0.05,\n      gravity: -0.3,\n      shrink: {\n        single: 0.2,\n        multi: 0.3,\n        root: false\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 0.5,\n          height: 1\n        },\n        scale: 0.2,\n        alpha_test: 0.2\n      },\n      flower: {\n        scale: 0.08,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 8, 0),\n        radius: 0.25,\n        sub_branches: [[0.3, 0, Math.PI / 3, 0, 4.5, 0, 6], [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4], [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4], [0.85, 0, 0, 0, 1, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2], [0.9, 0, 0, 0, 1, 0.5, 1]]\n      }, {\n        sub_branches: [[0.5, 0.2, Math.PI / 6, 0, 1, 0, 3], [0.9, 0, 0, 0, 0.7, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n        flowers: [[0.9, 0, 0, 0, 1]]\n      }]\n    }, {\n      name: \"丁香\",\n      path: \"resources/images/dingxiang/\",\n      depth: 4,\n      disturb: 0.03,\n      gravity: 0.1,\n      shrink: {\n        single: 0.2,\n        multi: 0.45,\n        root: false\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.007,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 0.5,\n          height: 1\n        },\n        scale: 0.2,\n        alpha_test: 0.2\n      },\n      flower: {\n        scale: 0.07,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, -0.1, 0),\n        end: new THREE.Vector3(0, 0, 0),\n        radius: 0.3,\n        sub_branches: [[0.7, 0.1, Math.PI / 11, Math.PI / 36, 5, 0.5, 3]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3]]\n      }, {\n        sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 1, 0.5, 3]]\n      }, {\n        sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 0.8, 0.2, 5]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]],\n        flowers: [[0.9, 0.1, Math.PI / 3, 0, 5]]\n      }]\n    }, {\n      name: \"凤凰木\",\n      path: \"resources/images/fenghuangmu/\",\n      depth: 3,\n      disturb: 0.05,\n      gravity: -0.1,\n      shrink: {\n        single: 0.2,\n        multi: 0.35,\n        root: true\n      },\n      tubular_segments: 5,\n      radial_segments: 4,\n      sample_offset: 0.005,\n      leaf: {\n        geometry: {\n          style: \"folded_reverse\",\n          width: 1,\n          height: 1\n        },\n        scale: 0.3,\n        alpha_test: 0.2\n      },\n      flower: {\n        scale: 0.15,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 9, 0),\n        radius: 0.25,\n        sub_branches: [[0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6], [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4], [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4], [0.8, 0, 0, 0, 1, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3], [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2], [0.9, 0, 0, 0, 1, 0.5, 1]]\n      }, {\n        sub_branches: [[0.5, 0.2, Math.PI / 6, 0, 1, 0, 3], [0.9, 0, 0, 0, 0.7, 0, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.7, 0.3, Math.PI / 3, 0, 5]],\n        flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]]\n      }]\n    }, {\n      name: \"水杉\",\n      path: \"resources/images/shuishan/\",\n      depth: 2,\n      disturb: 0.1,\n      gravity: 0.2,\n      shrink: {\n        single: 0.15,\n        multi: 0.2,\n        root: true\n      },\n      tubular_segments: 10,\n      radial_segments: 6,\n      sample_offset: 0.002,\n      leaf: {\n        geometry: {\n          style: \"folded\",\n          width: 1,\n          height: 2,\n          width_foldDegree: 0.3,\n          height_foldDegree: 0.5\n        },\n        scale: 0.5,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 30, 0),\n        radius: 0.6,\n        sub_branches: [[0.4, 0.2, Math.PI / 3, Math.PI / 36, 5, 0.5, 30], [0.75, 0.2, Math.PI / 4, Math.PI / 36, 3, 0.5, 30], [0.95, 0, 0, 0, 3, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.5, 0.1, Math.PI / 5, 0, 3, 0.5, 5], [0.95, 0, 0, 0, 2, 0.5, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.65, 0.3, Math.PI / 5, 0, 10]]\n      }]\n    }, {\n      name: \"落叶松\",\n      path: \"resources/images/luoyesong/\",\n      depth: 2,\n      disturb: 0.1,\n      gravity: -0.1,\n      shrink: {\n        single: 0.15,\n        multi: 0.2,\n        root: true\n      },\n      tubular_segments: 10,\n      radial_segments: 6,\n      sample_offset: 0.002,\n      leaf: {\n        geometry: {\n          style: \"cross\",\n          width: 1,\n          height: 2\n        },\n        scale: 0.5,\n        alpha_test: 0.5\n      },\n      branches: [\n      // root node\n      {\n        start: new THREE.Vector3(0, 0, 0),\n        end: new THREE.Vector3(0, 30, 0),\n        radius: 0.6,\n        sub_branches: [[0.4, 0.2, Math.PI / 2.5, Math.PI / 36, 5, 0.5, 20], [0.75, 0.2, Math.PI / 2.5, Math.PI / 36, 3, 0.5, 20], [0.95, 0, 0, 0, 3, 0.5, 1]]\n      },\n      // middle node\n      {\n        sub_branches: [[0.5, 0.1, Math.PI / 4, 0, 3, 0.5, 5], [0.95, 0, 0, 0, 2, 0.5, 1]]\n      },\n      // leaf node\n      {\n        leaves: [[0.65, 0.3, Math.PI / 4, 0, 10]]\n      }]\n    }\n    // {\n    //   name: \"海棠\",\n    //   path: \"resources/images/haitang/\",\n    //   depth: 3,\n    //   disturb: 0.03,\n    //   gravity: 3,\n    //   shrink: { single: 0.2, multi: 0.35, root: true },\n    //   tubular_segments: 10,\n    //   radial_segments: 4,\n    //   sample_offset: 0.005,\n    //   leaf: {\n    //     geometry: { style: \"folded\", width: 0.5, height: 1 },\n    //     scale: 0.3,\n    //     alpha_test: 0.5,\n    //   },\n    //   flower: {\n    //     scale: 0.1,\n    //     alpha_test: 0.5,\n    //   },\n    //   branches: [\n    //     // root node\n    //     {\n    //       start: new THREE.Vector3(0, 0, 0),\n    //       end: new THREE.Vector3(0, 10, 0),\n    //       radius: 0.25,\n    //       sub_branches: [\n    //         [0.4, 0.05, Math.PI / 3, 0, 4.5, 0, 6],\n    //         [0.5, 0.1, Math.PI / 4, 0, 4, 0, 4],\n    //         [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n    //         [0.8, 0, 0, 0, 1, 0.5, 1],\n    //       ],\n    //     },\n    //     // middle node\n    //     {\n    //       sub_branches: [\n    //         [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n    //         [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n    //         [0.9, 0, 0, 0, 1, 0.5, 1],\n    //       ],\n    //     },\n    //     {\n    //       sub_branches: [\n    //         [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n    //         [0.9, 0, 0, 0, 0.7, 0, 1],\n    //       ],\n    //     },\n    //     // leaf node\n    //     {\n    //       leaves: [[0.7, 0.3, Math.PI / 3, 0, 8]],\n    //       flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]],\n    //     },\n    //   ],\n    // },\n    // {\n    //   name: \"红果冬青\",\n    //   path: \"resources/images/hongguo/\",\n    //   depth: 3,\n    //   disturb: 0.05,\n    //   gravity: 3,\n    //   shrink: { single: 0.5, multi: 0.4, root: true },\n    //   tubular_segments: 10,\n    //   radial_segments: 5,\n    //   sample_offset: 0.005,\n    //   leaf: {\n    //     geometry: { style: \"folded\", width: 0.3, height: 1 },\n    //     scale: 0.3,\n    //     alpha_test: 0.5,\n    //   },\n    //   fruit: {\n    //     geometry: { style: \"cross\", width: 0.5, height: 1 },\n    //     scale: 0.15,\n    //     alpha_test: 0.5,\n    //   },\n    //   branches: [\n    //     // root node\n    //     {\n    //       start: new THREE.Vector3(0, 0, 0),\n    //       end: new THREE.Vector3(0, 3, 0),\n    //       radius: 0.2,\n    //       sub_branches: [[0.95, 0, Math.PI / 5, Math.PI / 36, 3, 0.5, 2]],\n    //     },\n    //     // middle node\n    //     {\n    //       sub_branches: [\n    //         [0.4, 0.2, Math.PI / 3, 0, 2, 0.5, 6],\n    //         [0.7, 0.2, Math.PI / 3, 0, 2, 0.5, 4],\n    //         [0.9, 0, 0, 0, 1, 0.5, 1],\n    //       ],\n    //     },\n    //     {\n    //       sub_branches: [\n    //         [0.5, 0.2, Math.PI / 4, 0, 1, 0, 4],\n    //         [0.9, 0, 0, 0, 0.7, 0, 1],\n    //       ],\n    //     },\n    //     // leaf node\n    //     {\n    //       leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]],\n    //       flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]],\n    //     },\n    //   ],\n    // },\n    ];\n  }\n  getTree(name) {\n    const {\n      indices,\n      content\n    } = this;\n    const id = indices.get(name);\n    return content[id];\n  }\n}\nexport { CustomizeTree };","map":{"version":3,"names":["THREE","CustomizeTree","constructor","indices","Map","content","name","path","depth","disturb","gravity","shrink","single","multi","root","tubular_segments","radial_segments","sample_offset","leaf","geometry","style","width","height","scale","alpha_test","branches","start","Vector3","end","radius","sub_branches","Math","PI","leaves","foldDegree","flower","flowers","width_foldDegree","height_foldDegree","getTree","id","get"],"sources":["C:/Users/21064/Desktop/frontend/src/CustomizeTree.js"],"sourcesContent":["import * as THREE from \"three\";\n/*************************************************************************************\n * CLASS NAME:  CustomizeTree\n * DESCRIPTION: 整合各种treeObj\n * NOTE:\n *\n *************************************************************************************/\nclass CustomizeTree {\n  constructor() {\n    this.indices = new Map([\n      [\"普通乔木\", 0],\n      [\"桂花\", 1],\n      [\"国槐\", 2],\n      [\"木芙蓉\", 3],\n      [\"八棱海棠\", 4],\n      [\"红枫\", 5],\n      [\"桃树\", 6],\n      [\"垂丝海棠\", 7],\n      [\"丁香\", 8],\n      [\"凤凰木\", 9],\n      [\"水杉\", 10],\n      [\"落叶松\", 11],\n      // [\"海棠\", 10],\n      // [\"红果冬青\", 11],\n    ]);\n    this.content = [\n      {\n        name: \"普通乔木\",\n        path: \"resources/images/ordinarytree/\",\n        depth: 2,\n        disturb: 0.08,\n        gravity: 0,\n        shrink: { single: 0.4, multi: 0.4, root: true },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"cross\", width: 0.7, height: 1 },\n          scale: 3,\n          alpha_test: 0.25,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 18, 0),\n            radius: 0.6,\n            sub_branches: [\n              // [ sub_branches_position, noise1, sub_branches_angle, noise2, next_level_length, noise3, number ]\n              [0.4, 0.1, Math.PI / 2.5, Math.PI / 36, 7, 0.5, 3],\n              // [0.6, 0.05, Math.PI / 3, 0, 6, 0.5, 3],\n              // [0.8, 0.05, Math.PI / 3, 0, 5, 0.5, 3],\n              // [0.95, 0, 0, 0, 4, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.6, 0.2, Math.PI / 4, Math.PI / 36, 4, 0.5, 5],\n              [0.9, 0, 0, 0, 3, 0.5, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [\n              // [ leaves_position, noise1, leaves_angle, noise2, number]\n              [0.6, 0.35, Math.PI / 4, 0, 3],\n              [0.95, 0, 0, 0, 1],\n            ],\n          },\n        ],\n      },\n      {\n        name: \"桂花\",\n        path: \"resources/images/guihua/\",\n        depth: 4,\n        disturb: 0.02,\n        gravity: 0,\n        shrink: { single: 0.4, multi: 0.5, root: true },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.01,\n        leaf: {\n          geometry: { style: \"cross\", width: 1, height: 1 },\n          scale: 0.8,\n          alpha_test: 0.2,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 8, 0),\n            radius: 0.3,\n            sub_branches: [[0.6, 0.3, Math.PI / 5, Math.PI / 36, 4, 0.5, 5]],\n          },\n          // middle node\n          {\n            sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 3, 0.5, 5]],\n          },\n          {\n            sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 2, 0.5, 2]],\n          },\n          {\n            sub_branches: [[0.5, 0.4, Math.PI / 6, 0, 1, 0.5, 3]],\n          },\n          // leaf node\n          {\n            leaves: [[0.8, 0.2, Math.PI / 6, 0, 5]],\n          },\n        ],\n      },\n      {\n        name: \"国槐\",\n        path: \"resources/images/guohuai/\",\n        depth: 5,\n        disturb: 0.03,\n        gravity: 0.07,\n        shrink: { single: 0.4, multi: 0.45, root: true },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.01,\n        leaf: {\n          geometry: { style: \"cross\", width: 0.5, height: 1, foldDegree: 0.3 },\n          scale: 0.6,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 15, 0),\n            radius: 0.7,\n            sub_branches: [\n              [0.5, 0.1, Math.PI / 3, Math.PI / 36, 7, 0.5, 5],\n              [0.8, 0.1, Math.PI / 4, Math.PI / 36, 6, 0.5, 3],\n              [0.95, 0, 0, 0, 5, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.6, 0.2, Math.PI / 5, Math.PI / 36, 3, 0.5, 3],\n              [0.95, 0, 0, 0, 3, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [[0.6, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3]],\n          },\n          {\n            sub_branches: [[0.6, 0.3, Math.PI / 5, Math.PI / 36, 1, 0.5, 3]],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.4, Math.PI / 5, Math.PI / 36, 2, 0, 3],\n              [0.95, 0, 0, 0, 2, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.6, 0.4, Math.PI / 5, 0, 6]],\n          },\n        ],\n      },\n      {\n        name: \"木芙蓉\",\n        path: \"resources/images/mufurong/\",\n        depth: 4,\n        disturb: 0.03,\n        gravity: 0.1,\n        shrink: { single: 0.2, multi: 0.45, root: false },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0,\n        leaf: {\n          geometry: { style: \"surround\", width: 1, height: 1 },\n          scale: 0.15,\n          alpha_test: 0.5,\n        },\n        flower: {\n          scale: 0.08,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, -0.1, 0),\n            end: new THREE.Vector3(0, 0, 0),\n            radius: 0.3,\n            sub_branches: [[0.7, 0.1, Math.PI / 11, Math.PI / 36, 3, 0.5, 4]],\n          },\n          // middle node\n          {\n            sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 2, 0.5, 3]],\n          },\n          {\n            sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 1, 0.5, 3]],\n          },\n          {\n            sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 0.8, 0.2, 3]],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 3]],\n          },\n        ],\n      },\n      {\n        name: \"八棱海棠\",\n        path: \"resources/images/8leng/\",\n        depth: 3,\n        disturb: 0.05,\n        gravity: -0.1,\n        shrink: { single: 0.2, multi: 0.3, root: false },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"folded\", width: 0.5, height: 1 },\n          scale: 0.2,\n          alpha_test: 0.2,\n        },\n        flower: {\n          scale: 0.08,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 7, 0),\n            radius: 0.25,\n            sub_branches: [\n              [0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6],\n              [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4],\n              [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n              [0.85, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n              [0.9, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n              [0.9, 0, 0, 0, 0.7, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n            flowers: [[0.9, 0, 0, 0, 1]],\n          },\n        ],\n      },\n      {\n        name: \"红枫\",\n        path: \"resources/images/hongfeng/\",\n        depth: 3,\n        disturb: 0.02,\n        gravity: -0.2,\n        shrink: { single: 0.2, multi: 0.35, root: true },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"folded\", width: 1, height: 1 },\n          scale: 0.4,\n          alpha_test: 0.2,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 9, 0),\n            radius: 0.25,\n            sub_branches: [\n              [0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6],\n              [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4],\n              [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n              [0.8, 0, 0, 0, 1, 0, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n              [0.9, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n              [0.9, 0, 0, 0, 0.7, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]],\n          },\n        ],\n      },\n      {\n        name: \"桃树\",\n        path: \"resources/images/peach/\",\n        depth: 3,\n        disturb: 0.02,\n        gravity: -0.2,\n        shrink: { single: 0.2, multi: 0.3, root: false },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"folded\", width: 0.5, height: 1 },\n          scale: 0.2,\n          alpha_test: 0.2,\n        },\n        flower: {\n          scale: 0.08,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 7, 0),\n            radius: 0.25,\n            sub_branches: [\n              [0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6],\n              [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4],\n              [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n              [0.85, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n              [0.9, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n              [0.9, 0, 0, 0, 0.7, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n            flowers: [[0.9, 0, 0, 0, 1]],\n          },\n        ],\n      },\n      {\n        name: \"垂丝海棠\",\n        path: \"resources/images/chuisi/\",\n        depth: 3,\n        disturb: 0.05,\n        gravity: -0.3,\n        shrink: { single: 0.2, multi: 0.3, root: false },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"folded\", width: 0.5, height: 1 },\n          scale: 0.2,\n          alpha_test: 0.2,\n        },\n        flower: {\n          scale: 0.08,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 8, 0),\n            radius: 0.25,\n            sub_branches: [\n              [0.3, 0, Math.PI / 3, 0, 4.5, 0, 6],\n              [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4],\n              [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n              [0.85, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n              [0.9, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n              [0.9, 0, 0, 0, 0.7, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 15]],\n            flowers: [[0.9, 0, 0, 0, 1]],\n          },\n        ],\n      },\n      {\n        name: \"丁香\",\n        path: \"resources/images/dingxiang/\",\n        depth: 4,\n        disturb: 0.03,\n        gravity: 0.1,\n        shrink: { single: 0.2, multi: 0.45, root: false },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.007,\n        leaf: {\n          geometry: { style: \"folded\", width: 0.5, height: 1 },\n          scale: 0.2,\n          alpha_test: 0.2,\n        },\n        flower: {\n          scale: 0.07,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, -0.1, 0),\n            end: new THREE.Vector3(0, 0, 0),\n            radius: 0.3,\n            sub_branches: [[0.7, 0.1, Math.PI / 11, Math.PI / 36, 5, 0.5, 3]],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, Math.PI / 36, 2, 0.5, 3],\n            ],\n          },\n          {\n            sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 1, 0.5, 3]],\n          },\n          {\n            sub_branches: [[0.7, 0.2, Math.PI / 6, Math.PI / 36, 0.8, 0.2, 5]],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]],\n            flowers: [[0.9, 0.1, Math.PI / 3, 0, 5]],\n          },\n        ],\n      },\n      {\n        name: \"凤凰木\",\n        path: \"resources/images/fenghuangmu/\",\n        depth: 3,\n        disturb: 0.05,\n        gravity: -0.1,\n        shrink: { single: 0.2, multi: 0.35, root: true },\n        tubular_segments: 5,\n        radial_segments: 4,\n        sample_offset: 0.005,\n        leaf: {\n          geometry: { style: \"folded_reverse\", width: 1, height: 1 },\n          scale: 0.3,\n          alpha_test: 0.2,\n        },\n        flower: {\n          scale: 0.15,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 9, 0),\n            radius: 0.25,\n            sub_branches: [\n              [0.3, 0.1, Math.PI / 3, 0, 4.5, 0, 6],\n              [0.4, 0.1, Math.PI / 4, 0, 4, 0, 4],\n              [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n              [0.8, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n              [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n              [0.9, 0, 0, 0, 1, 0.5, 1],\n            ],\n          },\n          {\n            sub_branches: [\n              [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n              [0.9, 0, 0, 0, 0.7, 0, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.7, 0.3, Math.PI / 3, 0, 5]],\n            flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]],\n          },\n        ],\n      },\n      {\n        name: \"水杉\",\n        path: \"resources/images/shuishan/\",\n        depth: 2,\n        disturb: 0.1,\n        gravity: 0.2,\n        shrink: { single: 0.15, multi: 0.2, root: true },\n        tubular_segments: 10,\n        radial_segments: 6,\n        sample_offset: 0.002,\n        leaf: {\n          geometry: {\n            style: \"folded\",\n            width: 1,\n            height: 2,\n            width_foldDegree: 0.3,\n            height_foldDegree: 0.5,\n          },\n          scale: 0.5,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 30, 0),\n            radius: 0.6,\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 3, Math.PI / 36, 5, 0.5, 30],\n              [0.75, 0.2, Math.PI / 4, Math.PI / 36, 3, 0.5, 30],\n              [0.95, 0, 0, 0, 3, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.5, 0.1, Math.PI / 5, 0, 3, 0.5, 5],\n              [0.95, 0, 0, 0, 2, 0.5, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.65, 0.3, Math.PI / 5, 0, 10]],\n          },\n        ],\n      },\n      {\n        name: \"落叶松\",\n        path: \"resources/images/luoyesong/\",\n        depth: 2,\n        disturb: 0.1,\n        gravity: -0.1,\n        shrink: { single: 0.15, multi: 0.2, root: true },\n        tubular_segments: 10,\n        radial_segments: 6,\n        sample_offset: 0.002,\n        leaf: {\n          geometry: {\n            style: \"cross\",\n            width: 1,\n            height: 2,\n          },\n          scale: 0.5,\n          alpha_test: 0.5,\n        },\n        branches: [\n          // root node\n          {\n            start: new THREE.Vector3(0, 0, 0),\n            end: new THREE.Vector3(0, 30, 0),\n            radius: 0.6,\n            sub_branches: [\n              [0.4, 0.2, Math.PI / 2.5, Math.PI / 36, 5, 0.5, 20],\n              [0.75, 0.2, Math.PI / 2.5, Math.PI / 36, 3, 0.5, 20],\n              [0.95, 0, 0, 0, 3, 0.5, 1],\n            ],\n          },\n          // middle node\n          {\n            sub_branches: [\n              [0.5, 0.1, Math.PI / 4, 0, 3, 0.5, 5],\n              [0.95, 0, 0, 0, 2, 0.5, 1],\n            ],\n          },\n          // leaf node\n          {\n            leaves: [[0.65, 0.3, Math.PI / 4, 0, 10]],\n          },\n        ],\n      },\n      // {\n      //   name: \"海棠\",\n      //   path: \"resources/images/haitang/\",\n      //   depth: 3,\n      //   disturb: 0.03,\n      //   gravity: 3,\n      //   shrink: { single: 0.2, multi: 0.35, root: true },\n      //   tubular_segments: 10,\n      //   radial_segments: 4,\n      //   sample_offset: 0.005,\n      //   leaf: {\n      //     geometry: { style: \"folded\", width: 0.5, height: 1 },\n      //     scale: 0.3,\n      //     alpha_test: 0.5,\n      //   },\n      //   flower: {\n      //     scale: 0.1,\n      //     alpha_test: 0.5,\n      //   },\n      //   branches: [\n      //     // root node\n      //     {\n      //       start: new THREE.Vector3(0, 0, 0),\n      //       end: new THREE.Vector3(0, 10, 0),\n      //       radius: 0.25,\n      //       sub_branches: [\n      //         [0.4, 0.05, Math.PI / 3, 0, 4.5, 0, 6],\n      //         [0.5, 0.1, Math.PI / 4, 0, 4, 0, 4],\n      //         [0.6, 0.1, Math.PI / 5, 0, 2, 0, 4],\n      //         [0.8, 0, 0, 0, 1, 0.5, 1],\n      //       ],\n      //     },\n      //     // middle node\n      //     {\n      //       sub_branches: [\n      //         [0.4, 0.2, Math.PI / 5, 0, 2, 0.5, 3],\n      //         [0.7, 0.2, Math.PI / 5, 0, 2, 0.5, 2],\n      //         [0.9, 0, 0, 0, 1, 0.5, 1],\n      //       ],\n      //     },\n      //     {\n      //       sub_branches: [\n      //         [0.5, 0.2, Math.PI / 6, 0, 1, 0, 3],\n      //         [0.9, 0, 0, 0, 0.7, 0, 1],\n      //       ],\n      //     },\n      //     // leaf node\n      //     {\n      //       leaves: [[0.7, 0.3, Math.PI / 3, 0, 8]],\n      //       flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]],\n      //     },\n      //   ],\n      // },\n      // {\n      //   name: \"红果冬青\",\n      //   path: \"resources/images/hongguo/\",\n      //   depth: 3,\n      //   disturb: 0.05,\n      //   gravity: 3,\n      //   shrink: { single: 0.5, multi: 0.4, root: true },\n      //   tubular_segments: 10,\n      //   radial_segments: 5,\n      //   sample_offset: 0.005,\n      //   leaf: {\n      //     geometry: { style: \"folded\", width: 0.3, height: 1 },\n      //     scale: 0.3,\n      //     alpha_test: 0.5,\n      //   },\n      //   fruit: {\n      //     geometry: { style: \"cross\", width: 0.5, height: 1 },\n      //     scale: 0.15,\n      //     alpha_test: 0.5,\n      //   },\n      //   branches: [\n      //     // root node\n      //     {\n      //       start: new THREE.Vector3(0, 0, 0),\n      //       end: new THREE.Vector3(0, 3, 0),\n      //       radius: 0.2,\n      //       sub_branches: [[0.95, 0, Math.PI / 5, Math.PI / 36, 3, 0.5, 2]],\n      //     },\n      //     // middle node\n      //     {\n      //       sub_branches: [\n      //         [0.4, 0.2, Math.PI / 3, 0, 2, 0.5, 6],\n      //         [0.7, 0.2, Math.PI / 3, 0, 2, 0.5, 4],\n      //         [0.9, 0, 0, 0, 1, 0.5, 1],\n      //       ],\n      //     },\n      //     {\n      //       sub_branches: [\n      //         [0.5, 0.2, Math.PI / 4, 0, 1, 0, 4],\n      //         [0.9, 0, 0, 0, 0.7, 0, 1],\n      //       ],\n      //     },\n      //     // leaf node\n      //     {\n      //       leaves: [[0.7, 0.3, Math.PI / 3, 0, 10]],\n      //       flowers: [[0.8, 0.2, Math.PI / 3, 0, 3]],\n      //     },\n      //   ],\n      // },\n    ];\n  }\n\n  getTree(name) {\n    const { indices, content } = this;\n    const id = indices.get(name);\n    return content[id];\n  }\n}\n\nexport { CustomizeTree };\n"],"mappings":"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AE,CACZ,CAAC,GAAG,EAAE,GAAG,EAAEC,IAAI,CAACC,EAAE,GAAG,GAAG,EAAED,IAAI,CAACC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACnD,CAAC,IAAI,EAAE,GAAG,EAAED,IAAI,CAACC,EAAE,GAAG,GAAG,EAAED,IAAI,CAACC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACpD,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAE9B,CAAC;MACD;MACA;QACEF,YAAY,EAAE,CACZ,CAAC,GAAG,EAAE,GAAG,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EACrC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAE9B,CAAC;MACD;MACA;QACEC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,EAAEF,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC1C,CAAC;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,CACD;EACH;EAEAO,OAAOA,CAACjC,IAAI,EAAE;IACZ,MAAM;MAAEH,OAAO;MAAEE;IAAQ,CAAC,GAAG,IAAI;IACjC,MAAMmC,EAAE,GAAGrC,OAAO,CAACsC,GAAG,CAACnC,IAAI,CAAC;IAC5B,OAAOD,OAAO,CAACmC,EAAE,CAAC;EACpB;AACF;AAEA,SAASvC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}