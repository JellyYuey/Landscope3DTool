{"ast":null,"code":"import { Group, Mesh, LineSegments, BufferGeometry, LineBasicMaterial, Box3Helper, Box3, PlaneGeometry, MeshBasicMaterial, BufferAttribute, DoubleSide } from 'three';\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute('position', new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n    frustumLines.visible = displayFrustum;\n  }\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute('position');\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    if (camera === null) return;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 0xffffff);\n      const planeMat = new MeshBasicMaterial({\n        transparent: true,\n        opacity: 0.1,\n        depthWrite: false,\n        side: DoubleSide\n      });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 0xffff00);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts[2]);\n      cascadeLine.box.max.copy(farVerts[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts[0], farVerts[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts[0], farVerts[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n  dispose() {\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    frustumLines.geometry.dispose();\n    frustumLines.material.dispose();\n    const cascades = this.csm.cascades;\n    for (let i = 0; i < cascades; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.dispose(); // Box3Helper\n\n      cascadePlane.geometry.dispose();\n      cascadePlane.material.dispose();\n      shadowLine.dispose(); // Box3Helper\n    }\n  }\n}\nexport { CSMHelper };","map":{"version":3,"names":["Group","Mesh","LineSegments","BufferGeometry","LineBasicMaterial","Box3Helper","Box3","PlaneGeometry","MeshBasicMaterial","BufferAttribute","DoubleSide","CSMHelper","constructor","csm","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","setIndex","setAttribute","frustumLines","add","cascadeLines","cascadePlanes","shadowLines","updateVisibility","i","l","length","cascadeLine","cascadePlane","shadowLineGroup","visible","update","camera","cascades","mainFrustum","frustums","lights","frustumLinePositions","geometry","getAttribute","position","copy","quaternion","scale","updateMatrixWorld","remove","pop","planeMat","transparent","opacity","depthWrite","side","shadowLine","push","frustum","light","shadowCam","shadow","farVerts","vertices","far","children","box","min","max","z","addVectors","multiplyScalar","subVectors","attach","set","bottom","left","top","right","near","nearVerts","setXYZ","x","y","needsUpdate","dispose","material"],"sources":["C:/Users/21064/Desktop/frontend/node_modules/three/examples/jsm/csm/CSMHelper.js"],"sourcesContent":["import {\n\tGroup,\n\tMesh,\n\tLineSegments,\n\tBufferGeometry,\n\tLineBasicMaterial,\n\tBox3Helper,\n\tBox3,\n\tPlaneGeometry,\n\tMeshBasicMaterial,\n\tBufferAttribute,\n\tDoubleSide\n} from 'three';\n\nclass CSMHelper extends Group {\n\n\tconstructor( csm ) {\n\n\t\tsuper();\n\t\tthis.csm = csm;\n\t\tthis.displayFrustum = true;\n\t\tthis.displayPlanes = true;\n\t\tthis.displayShadowBounds = true;\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 24 );\n\t\tconst frustumGeometry = new BufferGeometry();\n\t\tfrustumGeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tfrustumGeometry.setAttribute( 'position', new BufferAttribute( positions, 3, false ) );\n\t\tconst frustumLines = new LineSegments( frustumGeometry, new LineBasicMaterial() );\n\t\tthis.add( frustumLines );\n\n\t\tthis.frustumLines = frustumLines;\n\t\tthis.cascadeLines = [];\n\t\tthis.cascadePlanes = [];\n\t\tthis.shadowLines = [];\n\n\t}\n\n\tupdateVisibility() {\n\n\t\tconst displayFrustum = this.displayFrustum;\n\t\tconst displayPlanes = this.displayPlanes;\n\t\tconst displayShadowBounds = this.displayShadowBounds;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\t\tfor ( let i = 0, l = cascadeLines.length; i < l; i ++ ) {\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\n\t\t\tcascadeLine.visible = displayFrustum;\n\t\t\tcascadePlane.visible = displayFrustum && displayPlanes;\n\t\t\tshadowLineGroup.visible = displayShadowBounds;\n\n\t\t}\n\n\t\tfrustumLines.visible = displayFrustum;\n\n\t}\n\n\tupdate() {\n\n\t\tconst csm = this.csm;\n\t\tconst camera = csm.camera;\n\t\tconst cascades = csm.cascades;\n\t\tconst mainFrustum = csm.mainFrustum;\n\t\tconst frustums = csm.frustums;\n\t\tconst lights = csm.lights;\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst frustumLinePositions = frustumLines.geometry.getAttribute( 'position' );\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\n\t\tif ( camera === null ) return;\n\n\t\tthis.position.copy( camera.position );\n\t\tthis.quaternion.copy( camera.quaternion );\n\t\tthis.scale.copy( camera.scale );\n\t\tthis.updateMatrixWorld( true );\n\n\t\twhile ( cascadeLines.length > cascades ) {\n\n\t\t\tthis.remove( cascadeLines.pop() );\n\t\t\tthis.remove( cascadePlanes.pop() );\n\t\t\tthis.remove( shadowLines.pop() );\n\n\t\t}\n\n\t\twhile ( cascadeLines.length < cascades ) {\n\n\t\t\tconst cascadeLine = new Box3Helper( new Box3(), 0xffffff );\n\t\t\tconst planeMat = new MeshBasicMaterial( { transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide } );\n\t\t\tconst cascadePlane = new Mesh( new PlaneGeometry(), planeMat );\n\t\t\tconst shadowLineGroup = new Group();\n\t\t\tconst shadowLine = new Box3Helper( new Box3(), 0xffff00 );\n\t\t\tshadowLineGroup.add( shadowLine );\n\n\t\t\tthis.add( cascadeLine );\n\t\t\tthis.add( cascadePlane );\n\t\t\tthis.add( shadowLineGroup );\n\n\t\t\tcascadeLines.push( cascadeLine );\n\t\t\tcascadePlanes.push( cascadePlane );\n\t\t\tshadowLines.push( shadowLineGroup );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\n\n\t\t\tconst frustum = frustums[ i ];\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadowCam = light.shadow.camera;\n\t\t\tconst farVerts = frustum.vertices.far;\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\n\n\t\t\tcascadeLine.box.min.copy( farVerts[ 2 ] );\n\t\t\tcascadeLine.box.max.copy( farVerts[ 0 ] );\n\t\t\tcascadeLine.box.max.z += 1e-4;\n\n\t\t\tcascadePlane.position.addVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.position.multiplyScalar( 0.5 );\n\t\t\tcascadePlane.scale.subVectors( farVerts[ 0 ], farVerts[ 2 ] );\n\t\t\tcascadePlane.scale.z = 1e-4;\n\n\t\t\tthis.remove( shadowLineGroup );\n\t\t\tshadowLineGroup.position.copy( shadowCam.position );\n\t\t\tshadowLineGroup.quaternion.copy( shadowCam.quaternion );\n\t\t\tshadowLineGroup.scale.copy( shadowCam.scale );\n\t\t\tshadowLineGroup.updateMatrixWorld( true );\n\t\t\tthis.attach( shadowLineGroup );\n\n\t\t\tshadowLine.box.min.set( shadowCam.bottom, shadowCam.left, - shadowCam.far );\n\t\t\tshadowLine.box.max.set( shadowCam.top, shadowCam.right, - shadowCam.near );\n\n\t\t}\n\n\t\tconst nearVerts = mainFrustum.vertices.near;\n\t\tconst farVerts = mainFrustum.vertices.far;\n\t\tfrustumLinePositions.setXYZ( 0, farVerts[ 0 ].x, farVerts[ 0 ].y, farVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 1, farVerts[ 3 ].x, farVerts[ 3 ].y, farVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 2, farVerts[ 2 ].x, farVerts[ 2 ].y, farVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 3, farVerts[ 1 ].x, farVerts[ 1 ].y, farVerts[ 1 ].z );\n\n\t\tfrustumLinePositions.setXYZ( 4, nearVerts[ 0 ].x, nearVerts[ 0 ].y, nearVerts[ 0 ].z );\n\t\tfrustumLinePositions.setXYZ( 5, nearVerts[ 3 ].x, nearVerts[ 3 ].y, nearVerts[ 3 ].z );\n\t\tfrustumLinePositions.setXYZ( 6, nearVerts[ 2 ].x, nearVerts[ 2 ].y, nearVerts[ 2 ].z );\n\t\tfrustumLinePositions.setXYZ( 7, nearVerts[ 1 ].x, nearVerts[ 1 ].y, nearVerts[ 1 ].z );\n\t\tfrustumLinePositions.needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tconst frustumLines = this.frustumLines;\n\t\tconst cascadeLines = this.cascadeLines;\n\t\tconst cascadePlanes = this.cascadePlanes;\n\t\tconst shadowLines = this.shadowLines;\n\n\t\tfrustumLines.geometry.dispose();\n\t\tfrustumLines.material.dispose();\n\n\t\tconst cascades = this.csm.cascades;\n\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\n\n\t\t\tconst cascadeLine = cascadeLines[ i ];\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\n\n\t\t\tcascadeLine.dispose(); // Box3Helper\n\n\t\t\tcascadePlane.geometry.dispose();\n\t\t\tcascadePlane.material.dispose();\n\n\t\t\tshadowLine.dispose(); // Box3Helper\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSMHelper };\n"],"mappings":"AAAA,SACCA,KAAK,EACLC,IAAI,EACJC,YAAY,EACZC,cAAc,EACdC,iBAAiB,EACjBC,UAAU,EACVC,IAAI,EACJC,aAAa,EACbC,iBAAiB,EACjBC,eAAe,EACfC,UAAU,QACJ,OAAO;AAEd,MAAMC,SAAS,SAASX,KAAK,CAAC;EAE7BY,WAAWA,CAAEC,GAAG,EAAG;IAElB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAE/B,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;IAC7G,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAAE,EAAG,CAAC;IACxC,MAAMC,eAAe,GAAG,IAAIlB,cAAc,CAAC,CAAC;IAC5CkB,eAAe,CAACC,QAAQ,CAAE,IAAIb,eAAe,CAAEQ,OAAO,EAAE,CAAE,CAAE,CAAC;IAC7DI,eAAe,CAACE,YAAY,CAAE,UAAU,EAAE,IAAId,eAAe,CAAEU,SAAS,EAAE,CAAC,EAAE,KAAM,CAAE,CAAC;IACtF,MAAMK,YAAY,GAAG,IAAItB,YAAY,CAAEmB,eAAe,EAAE,IAAIjB,iBAAiB,CAAC,CAAE,CAAC;IACjF,IAAI,CAACqB,GAAG,CAAED,YAAa,CAAC;IAExB,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,EAAE;EAEtB;EAEAC,gBAAgBA,CAAA,EAAG;IAElB,MAAMf,cAAc,GAAG,IAAI,CAACA,cAAc;IAC1C,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAMC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;IAEpD,MAAMQ,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAME,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAMC,WAAW,GAAG,IAAI,CAACA,WAAW;IACpC,KAAM,IAAIE,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,YAAY,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAEvD,MAAMG,WAAW,GAAGP,YAAY,CAAEI,CAAC,CAAE;MACrC,MAAMI,YAAY,GAAGP,aAAa,CAAEG,CAAC,CAAE;MACvC,MAAMK,eAAe,GAAGP,WAAW,CAAEE,CAAC,CAAE;MAExCG,WAAW,CAACG,OAAO,GAAGtB,cAAc;MACpCoB,YAAY,CAACE,OAAO,GAAGtB,cAAc,IAAIC,aAAa;MACtDoB,eAAe,CAACC,OAAO,GAAGpB,mBAAmB;IAE9C;IAEAQ,YAAY,CAACY,OAAO,GAAGtB,cAAc;EAEtC;EAEAuB,MAAMA,CAAA,EAAG;IAER,MAAMxB,GAAG,GAAG,IAAI,CAACA,GAAG;IACpB,MAAMyB,MAAM,GAAGzB,GAAG,CAACyB,MAAM;IACzB,MAAMC,QAAQ,GAAG1B,GAAG,CAAC0B,QAAQ;IAC7B,MAAMC,WAAW,GAAG3B,GAAG,CAAC2B,WAAW;IACnC,MAAMC,QAAQ,GAAG5B,GAAG,CAAC4B,QAAQ;IAC7B,MAAMC,MAAM,GAAG7B,GAAG,CAAC6B,MAAM;IAEzB,MAAMlB,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMmB,oBAAoB,GAAGnB,YAAY,CAACoB,QAAQ,CAACC,YAAY,CAAE,UAAW,CAAC;IAC7E,MAAMnB,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAMC,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpC,IAAKU,MAAM,KAAK,IAAI,EAAG;IAEvB,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAET,MAAM,CAACQ,QAAS,CAAC;IACrC,IAAI,CAACE,UAAU,CAACD,IAAI,CAAET,MAAM,CAACU,UAAW,CAAC;IACzC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAET,MAAM,CAACW,KAAM,CAAC;IAC/B,IAAI,CAACC,iBAAiB,CAAE,IAAK,CAAC;IAE9B,OAAQxB,YAAY,CAACM,MAAM,GAAGO,QAAQ,EAAG;MAExC,IAAI,CAACY,MAAM,CAAEzB,YAAY,CAAC0B,GAAG,CAAC,CAAE,CAAC;MACjC,IAAI,CAACD,MAAM,CAAExB,aAAa,CAACyB,GAAG,CAAC,CAAE,CAAC;MAClC,IAAI,CAACD,MAAM,CAAEvB,WAAW,CAACwB,GAAG,CAAC,CAAE,CAAC;IAEjC;IAEA,OAAQ1B,YAAY,CAACM,MAAM,GAAGO,QAAQ,EAAG;MAExC,MAAMN,WAAW,GAAG,IAAI5B,UAAU,CAAE,IAAIC,IAAI,CAAC,CAAC,EAAE,QAAS,CAAC;MAC1D,MAAM+C,QAAQ,GAAG,IAAI7C,iBAAiB,CAAE;QAAE8C,WAAW,EAAE,IAAI;QAAEC,OAAO,EAAE,GAAG;QAAEC,UAAU,EAAE,KAAK;QAAEC,IAAI,EAAE/C;MAAW,CAAE,CAAC;MAClH,MAAMwB,YAAY,GAAG,IAAIjC,IAAI,CAAE,IAAIM,aAAa,CAAC,CAAC,EAAE8C,QAAS,CAAC;MAC9D,MAAMlB,eAAe,GAAG,IAAInC,KAAK,CAAC,CAAC;MACnC,MAAM0D,UAAU,GAAG,IAAIrD,UAAU,CAAE,IAAIC,IAAI,CAAC,CAAC,EAAE,QAAS,CAAC;MACzD6B,eAAe,CAACV,GAAG,CAAEiC,UAAW,CAAC;MAEjC,IAAI,CAACjC,GAAG,CAAEQ,WAAY,CAAC;MACvB,IAAI,CAACR,GAAG,CAAES,YAAa,CAAC;MACxB,IAAI,CAACT,GAAG,CAAEU,eAAgB,CAAC;MAE3BT,YAAY,CAACiC,IAAI,CAAE1B,WAAY,CAAC;MAChCN,aAAa,CAACgC,IAAI,CAAEzB,YAAa,CAAC;MAClCN,WAAW,CAAC+B,IAAI,CAAExB,eAAgB,CAAC;IAEpC;IAEA,KAAM,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,QAAQ,EAAET,CAAC,EAAG,EAAG;MAErC,MAAM8B,OAAO,GAAGnB,QAAQ,CAAEX,CAAC,CAAE;MAC7B,MAAM+B,KAAK,GAAGnB,MAAM,CAAEZ,CAAC,CAAE;MACzB,MAAMgC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACzB,MAAM;MACrC,MAAM0B,QAAQ,GAAGJ,OAAO,CAACK,QAAQ,CAACC,GAAG;MAErC,MAAMjC,WAAW,GAAGP,YAAY,CAAEI,CAAC,CAAE;MACrC,MAAMI,YAAY,GAAGP,aAAa,CAAEG,CAAC,CAAE;MACvC,MAAMK,eAAe,GAAGP,WAAW,CAAEE,CAAC,CAAE;MACxC,MAAM4B,UAAU,GAAGvB,eAAe,CAACgC,QAAQ,CAAE,CAAC,CAAE;MAEhDlC,WAAW,CAACmC,GAAG,CAACC,GAAG,CAACtB,IAAI,CAAEiB,QAAQ,CAAE,CAAC,CAAG,CAAC;MACzC/B,WAAW,CAACmC,GAAG,CAACE,GAAG,CAACvB,IAAI,CAAEiB,QAAQ,CAAE,CAAC,CAAG,CAAC;MACzC/B,WAAW,CAACmC,GAAG,CAACE,GAAG,CAACC,CAAC,IAAI,IAAI;MAE7BrC,YAAY,CAACY,QAAQ,CAAC0B,UAAU,CAAER,QAAQ,CAAE,CAAC,CAAE,EAAEA,QAAQ,CAAE,CAAC,CAAG,CAAC;MAChE9B,YAAY,CAACY,QAAQ,CAAC2B,cAAc,CAAE,GAAI,CAAC;MAC3CvC,YAAY,CAACe,KAAK,CAACyB,UAAU,CAAEV,QAAQ,CAAE,CAAC,CAAE,EAAEA,QAAQ,CAAE,CAAC,CAAG,CAAC;MAC7D9B,YAAY,CAACe,KAAK,CAACsB,CAAC,GAAG,IAAI;MAE3B,IAAI,CAACpB,MAAM,CAAEhB,eAAgB,CAAC;MAC9BA,eAAe,CAACW,QAAQ,CAACC,IAAI,CAAEe,SAAS,CAAChB,QAAS,CAAC;MACnDX,eAAe,CAACa,UAAU,CAACD,IAAI,CAAEe,SAAS,CAACd,UAAW,CAAC;MACvDb,eAAe,CAACc,KAAK,CAACF,IAAI,CAAEe,SAAS,CAACb,KAAM,CAAC;MAC7Cd,eAAe,CAACe,iBAAiB,CAAE,IAAK,CAAC;MACzC,IAAI,CAACyB,MAAM,CAAExC,eAAgB,CAAC;MAE9BuB,UAAU,CAACU,GAAG,CAACC,GAAG,CAACO,GAAG,CAAEd,SAAS,CAACe,MAAM,EAAEf,SAAS,CAACgB,IAAI,EAAE,CAAEhB,SAAS,CAACI,GAAI,CAAC;MAC3ER,UAAU,CAACU,GAAG,CAACE,GAAG,CAACM,GAAG,CAAEd,SAAS,CAACiB,GAAG,EAAEjB,SAAS,CAACkB,KAAK,EAAE,CAAElB,SAAS,CAACmB,IAAK,CAAC;IAE3E;IAEA,MAAMC,SAAS,GAAG1C,WAAW,CAACyB,QAAQ,CAACgB,IAAI;IAC3C,MAAMjB,QAAQ,GAAGxB,WAAW,CAACyB,QAAQ,CAACC,GAAG;IACzCvB,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAEnB,QAAQ,CAAE,CAAC,CAAE,CAACoB,CAAC,EAAEpB,QAAQ,CAAE,CAAC,CAAE,CAACqB,CAAC,EAAErB,QAAQ,CAAE,CAAC,CAAE,CAACO,CAAE,CAAC;IACnF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAEnB,QAAQ,CAAE,CAAC,CAAE,CAACoB,CAAC,EAAEpB,QAAQ,CAAE,CAAC,CAAE,CAACqB,CAAC,EAAErB,QAAQ,CAAE,CAAC,CAAE,CAACO,CAAE,CAAC;IACnF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAEnB,QAAQ,CAAE,CAAC,CAAE,CAACoB,CAAC,EAAEpB,QAAQ,CAAE,CAAC,CAAE,CAACqB,CAAC,EAAErB,QAAQ,CAAE,CAAC,CAAE,CAACO,CAAE,CAAC;IACnF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAEnB,QAAQ,CAAE,CAAC,CAAE,CAACoB,CAAC,EAAEpB,QAAQ,CAAE,CAAC,CAAE,CAACqB,CAAC,EAAErB,QAAQ,CAAE,CAAC,CAAE,CAACO,CAAE,CAAC;IAEnF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAED,SAAS,CAAE,CAAC,CAAE,CAACE,CAAC,EAAEF,SAAS,CAAE,CAAC,CAAE,CAACG,CAAC,EAAEH,SAAS,CAAE,CAAC,CAAE,CAACX,CAAE,CAAC;IACtF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAED,SAAS,CAAE,CAAC,CAAE,CAACE,CAAC,EAAEF,SAAS,CAAE,CAAC,CAAE,CAACG,CAAC,EAAEH,SAAS,CAAE,CAAC,CAAE,CAACX,CAAE,CAAC;IACtF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAED,SAAS,CAAE,CAAC,CAAE,CAACE,CAAC,EAAEF,SAAS,CAAE,CAAC,CAAE,CAACG,CAAC,EAAEH,SAAS,CAAE,CAAC,CAAE,CAACX,CAAE,CAAC;IACtF5B,oBAAoB,CAACwC,MAAM,CAAE,CAAC,EAAED,SAAS,CAAE,CAAC,CAAE,CAACE,CAAC,EAAEF,SAAS,CAAE,CAAC,CAAE,CAACG,CAAC,EAAEH,SAAS,CAAE,CAAC,CAAE,CAACX,CAAE,CAAC;IACtF5B,oBAAoB,CAAC2C,WAAW,GAAG,IAAI;EAExC;EAEAC,OAAOA,CAAA,EAAG;IAET,MAAM/D,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAME,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAMC,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpCJ,YAAY,CAACoB,QAAQ,CAAC2C,OAAO,CAAC,CAAC;IAC/B/D,YAAY,CAACgE,QAAQ,CAACD,OAAO,CAAC,CAAC;IAE/B,MAAMhD,QAAQ,GAAG,IAAI,CAAC1B,GAAG,CAAC0B,QAAQ;IAElC,KAAM,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,QAAQ,EAAET,CAAC,EAAG,EAAG;MAErC,MAAMG,WAAW,GAAGP,YAAY,CAAEI,CAAC,CAAE;MACrC,MAAMI,YAAY,GAAGP,aAAa,CAAEG,CAAC,CAAE;MACvC,MAAMK,eAAe,GAAGP,WAAW,CAAEE,CAAC,CAAE;MACxC,MAAM4B,UAAU,GAAGvB,eAAe,CAACgC,QAAQ,CAAE,CAAC,CAAE;MAEhDlC,WAAW,CAACsD,OAAO,CAAC,CAAC,CAAC,CAAC;;MAEvBrD,YAAY,CAACU,QAAQ,CAAC2C,OAAO,CAAC,CAAC;MAC/BrD,YAAY,CAACsD,QAAQ,CAACD,OAAO,CAAC,CAAC;MAE/B7B,UAAU,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvB;EAED;AAED;AAEA,SAAS5E,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}