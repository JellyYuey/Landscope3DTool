{"ast":null,"code":"import * as THREE from \"three\";\n/*************************************************************************************\n * CLASS NAME:  ClassicFlower\n * DESCRIPTION: Generate classic flower mesh.\n * NOTE:\n *\n *************************************************************************************/\nclass FlowerGeometry {\n  constructor() {}\n  generate() {\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [-1, 0.5, -1, 0, 0.5, -1, 1, 0.5, -1, -1, 0.5, 0, 0, 0, 0, 1, 0.5, 0, -1, 0.5, 1, 0, 0.5, 1, 1, 0.5, 1];\n    const uvs = [0, 1, 0.5, 1, 1, 1, 0, 0.5, 0.5, 0.5, 1, 0.5, 0, 0, 0.5, 0, 1, 0];\n    const normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n    const indices = [0, 1, 3, 4, 3, 1, 1, 2, 4, 5, 4, 2, 3, 4, 6, 7, 6, 4, 4, 5, 7, 8, 7, 5];\n    geometry.setAttribute(\"position\", new THREE.BufferAttribute(new Float32Array(vertices), 3));\n    geometry.setAttribute(\"normal\", new THREE.BufferAttribute(new Float32Array(normals), 3));\n    geometry.setAttribute(\"uv\", new THREE.BufferAttribute(new Float32Array(uvs), 2));\n    geometry.setIndex(indices);\n    return geometry;\n  }\n}\nexport { FlowerGeometry };","map":{"version":3,"names":["THREE","FlowerGeometry","constructor","generate","geometry","BufferGeometry","vertices","uvs","normals","indices","setAttribute","BufferAttribute","Float32Array","setIndex"],"sources":["C:/Users/21064/Desktop/frontend/src/leaf_flower_fruit/FlowerGeometry.js"],"sourcesContent":["import * as THREE from \"three\";\n/*************************************************************************************\n * CLASS NAME:  ClassicFlower\n * DESCRIPTION: Generate classic flower mesh.\n * NOTE:\n *\n *************************************************************************************/\nclass FlowerGeometry {\n  constructor() {}\n  generate() {\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [\n      -1, 0.5, -1, 0, 0.5, -1, 1, 0.5, -1, -1, 0.5, 0, 0, 0, 0, 1, 0.5, 0, -1,\n      0.5, 1, 0, 0.5, 1, 1, 0.5, 1,\n    ];\n    const uvs = [\n      0, 1, 0.5, 1, 1, 1, 0, 0.5, 0.5, 0.5, 1, 0.5, 0, 0, 0.5, 0, 1, 0,\n    ];\n    const normals = [\n      0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n      0, 1,\n    ];\n    const indices = [\n      0, 1, 3, 4, 3, 1, 1, 2, 4, 5, 4, 2, 3, 4, 6, 7, 6, 4, 4, 5, 7, 8, 7, 5,\n    ];\n    geometry.setAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(vertices), 3)\n    );\n    geometry.setAttribute(\n      \"normal\",\n      new THREE.BufferAttribute(new Float32Array(normals), 3)\n    );\n    geometry.setAttribute(\n      \"uv\",\n      new THREE.BufferAttribute(new Float32Array(uvs), 2)\n    );\n    geometry.setIndex(indices);\n    return geometry;\n  }\n}\n\nexport { FlowerGeometry };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG,CAAC;EACfC,QAAQA,CAAA,EAAG;IACT,MAAMC,QAAQ,GAAG,IAAIJ,KAAK,CAACK,cAAc,CAAC,CAAC;IAC3C,MAAMC,QAAQ,GAAG,CACf,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EACvE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAC7B;IACD,MAAMC,GAAG,GAAG,CACV,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACjE;IACD,MAAMC,OAAO,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzE,CAAC,EAAE,CAAC,CACL;IACD,MAAMC,OAAO,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACvE;IACDL,QAAQ,CAACM,YAAY,CACnB,UAAU,EACV,IAAIV,KAAK,CAACW,eAAe,CAAC,IAAIC,YAAY,CAACN,QAAQ,CAAC,EAAE,CAAC,CACzD,CAAC;IACDF,QAAQ,CAACM,YAAY,CACnB,QAAQ,EACR,IAAIV,KAAK,CAACW,eAAe,CAAC,IAAIC,YAAY,CAACJ,OAAO,CAAC,EAAE,CAAC,CACxD,CAAC;IACDJ,QAAQ,CAACM,YAAY,CACnB,IAAI,EACJ,IAAIV,KAAK,CAACW,eAAe,CAAC,IAAIC,YAAY,CAACL,GAAG,CAAC,EAAE,CAAC,CACpD,CAAC;IACDH,QAAQ,CAACS,QAAQ,CAACJ,OAAO,CAAC;IAC1B,OAAOL,QAAQ;EACjB;AACF;AAEA,SAASH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}