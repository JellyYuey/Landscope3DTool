{"ast":null,"code":"import { Curve } from '../core/Curve.js';\nimport { CatmullRom } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\nclass SplineCurve extends Curve {\n  constructor(points = []) {\n    super();\n    this.isSplineCurve = true;\n    this.type = 'SplineCurve';\n    this.points = points;\n  }\n  getPoint(t, optionalTarget = new Vector2()) {\n    const point = optionalTarget;\n    const points = this.points;\n    const p = (points.length - 1) * t;\n    const intPoint = Math.floor(p);\n    const weight = p - intPoint;\n    const p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    const p1 = points[intPoint];\n    const p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    const p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.points = [];\n    for (let i = 0, l = source.points.length; i < l; i++) {\n      const point = source.points[i];\n      this.points.push(point.clone());\n    }\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.points = [];\n    for (let i = 0, l = this.points.length; i < l; i++) {\n      const point = this.points[i];\n      data.points.push(point.toArray());\n    }\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.points = [];\n    for (let i = 0, l = json.points.length; i < l; i++) {\n      const point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n    return this;\n  }\n}\nexport { SplineCurve };","map":{"version":3,"names":["Curve","CatmullRom","Vector2","SplineCurve","constructor","points","isSplineCurve","type","getPoint","t","optionalTarget","point","p","length","intPoint","Math","floor","weight","p0","p1","p2","p3","set","x","y","copy","source","i","l","push","clone","toJSON","data","toArray","fromJSON","json","fromArray"],"sources":["C:/Users/21064/Desktop/frontend/node_modules/three/src/extras/curves/SplineCurve.js"],"sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { CatmullRom } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { SplineCurve };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}