{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21064\\\\Desktop\\\\frontend\\\\src\\\\ThreeScene.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s2();\n  const mountRef = useRef(null); // 引用 DOM 节点\n  const [objects, setObjects] = useState([]); // 存储场景中的物体\n\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    // 创建场景、相机、渲染器\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(10, 10, 20);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // 添加轨道控制器\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true; // 惯性效果\n    controls.dampingFactor = 0.05;\n    controls.screenSpacePanning = false;\n\n    // 添加光源\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // 环境光\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8); // 定向光\n    directionalLight.position.set(10, 20, 10);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // 添加地面\n    const planeGeometry = new THREE.PlaneGeometry(100, 100);\n    const planeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x808080\n    });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.rotation.x = -Math.PI / 2;\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    // 动态添加和删除物体的逻辑\n    const addObject = () => {\n      _s();\n      const boxGeometry = new THREE.BoxGeometry(2, 2, 2);\n      const boxMaterial = new THREE.MeshStandardMaterial({\n        color: Math.random() * 0xffffff\n      });\n      const box = new THREE.Mesh(boxGeometry, boxMaterial);\n      box.position.set(Math.random() * 10 - 5, 1, Math.random() * 10 - 5 // 随机放置在地面上\n      );\n      box.castShadow = true;\n      scene.add(box);\n      setObjects(prev => [...prev, box]); // 更新状态\n      useEffect(() => {\n        renderer.render(scene, camera);\n      }, [objects]); // objects 变化时触发渲染\n    };\n    _s(addObject, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n    const removeObject = () => {\n      if (objects.length > 0) {\n        const objectToRemove = objects.pop();\n        scene.remove(objectToRemove);\n        objectToRemove.geometry.dispose();\n        objectToRemove.material.dispose();\n        setObjects([...objects]); // 更新状态\n      }\n    };\n\n    // 渲染循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // 清理资源\n    return () => {\n      renderer.dispose();\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [objects]); // 依赖 objects 更新\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObjects(prev => [...prev, \"ADD\"]),\n        children: \"\\u6DFB\\u52A0\\u7269\\u4F53\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObjects(prev => [...prev, \"REMOVE\"]),\n        children: \"\\u5220\\u9664\\u7269\\u4F53\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThreeScene, \"4vz2YS/BoEdO2uyJfXLNSNEFIUA=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreeScene","_s2","mountRef","objects","setObjects","_s","$RefreshSig$","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","current","appendChild","domElement","controls","enableDamping","dampingFactor","screenSpacePanning","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","planeGeometry","PlaneGeometry","planeMaterial","MeshStandardMaterial","color","plane","Mesh","rotation","x","Math","PI","receiveShadow","addObject","boxGeometry","BoxGeometry","boxMaterial","random","box","prev","render","removeObject","length","objectToRemove","pop","remove","geometry","dispose","material","animate","requestAnimationFrame","update","removeChild","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","onClick","_c","$RefreshReg$"],"sources":["C:/Users/21064/Desktop/frontend/src/ThreeScene.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nconst ThreeScene = () => {\r\n  const mountRef = useRef(null); // 引用 DOM 节点\r\n  const [objects, setObjects] = useState([]); // 存储场景中的物体\r\n\r\n  useEffect(() => {\r\n    // 创建场景、相机、渲染器\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(10, 10, 20);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // 添加轨道控制器\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true; // 惯性效果\r\n    controls.dampingFactor = 0.05;\r\n    controls.screenSpacePanning = false;\r\n\r\n    // 添加光源\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // 环境光\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8); // 定向光\r\n    directionalLight.position.set(10, 20, 10);\r\n    directionalLight.castShadow = true;\r\n    scene.add(directionalLight);\r\n\r\n    // 添加地面\r\n    const planeGeometry = new THREE.PlaneGeometry(100, 100);\r\n    const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });\r\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n    plane.rotation.x = -Math.PI / 2;\r\n    plane.receiveShadow = true;\r\n    scene.add(plane);\r\n\r\n    // 动态添加和删除物体的逻辑\r\n    const addObject = () => {\r\n      const boxGeometry = new THREE.BoxGeometry(2, 2, 2);\r\n      const boxMaterial = new THREE.MeshStandardMaterial({ color: Math.random() * 0xffffff });\r\n      const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n      box.position.set(\r\n        Math.random() * 10 - 5,\r\n        1,\r\n        Math.random() * 10 - 5 // 随机放置在地面上\r\n      );\r\n      box.castShadow = true;\r\n      scene.add(box);\r\n\r\n      setObjects((prev) => [...prev, box]); // 更新状态\r\n      useEffect(() => {\r\n        renderer.render(scene, camera);\r\n      }, [objects]); // objects 变化时触发渲染\r\n      \r\n    };\r\n\r\n    const removeObject = () => {\r\n      if (objects.length > 0) {\r\n        const objectToRemove = objects.pop();\r\n        scene.remove(objectToRemove);\r\n        objectToRemove.geometry.dispose();\r\n        objectToRemove.material.dispose();\r\n\r\n        setObjects([...objects]); // 更新状态\r\n      }\r\n    };\r\n\r\n    // 渲染循环\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // 清理资源\r\n    return () => {\r\n      renderer.dispose();\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, [objects]); // 依赖 objects 更新\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mountRef} style={{ width: \"100%\", height: \"100vh\" }} />\r\n      <div style={{ position: \"absolute\", top: 10, left: 10 }}>\r\n        <button onClick={() => setObjects((prev) => [...prev, \"ADD\"])}>添加物体</button>\r\n        <button onClick={() => setObjects((prev) => [...prev, \"REMOVE\"])}>删除物体</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}