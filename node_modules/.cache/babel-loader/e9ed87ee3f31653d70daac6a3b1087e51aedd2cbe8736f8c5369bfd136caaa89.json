{"ast":null,"code":"import { Vector3 } from '../../math/Vector3.js';\nimport { Curve } from '../core/Curve.js';\nclass LineCurve3 extends Curve {\n  constructor(v1 = new Vector3(), v2 = new Vector3()) {\n    super();\n    this.isLineCurve3 = true;\n    this.type = 'LineCurve3';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n    return point;\n  }\n\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n  getTangent(t, optionalTarget = new Vector3()) {\n    return optionalTarget.subVectors(this.v2, this.v1).normalize();\n  }\n  getTangentAt(u, optionalTarget) {\n    return this.getTangent(u, optionalTarget);\n  }\n  copy(source) {\n    super.copy(source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nexport { LineCurve3 };","map":{"version":3,"names":["Vector3","Curve","LineCurve3","constructor","v1","v2","isLineCurve3","type","getPoint","t","optionalTarget","point","copy","sub","multiplyScalar","add","getPointAt","u","getTangent","subVectors","normalize","getTangentAt","source","toJSON","data","toArray","fromJSON","json","fromArray"],"sources":["C:/Users/21064/Desktop/frontend/node_modules/three/src/extras/curves/LineCurve3.js"],"sourcesContent":["import { Vector3 } from '../../math/Vector3.js';\nimport { Curve } from '../core/Curve.js';\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { LineCurve3 };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,UAAU,SAASD,KAAK,CAAC;EAE9BE,WAAWA,CAAEC,EAAE,GAAG,IAAIJ,OAAO,CAAC,CAAC,EAAEK,EAAE,GAAG,IAAIL,OAAO,CAAC,CAAC,EAAG;IAErD,KAAK,CAAC,CAAC;IAEP,IAAI,CAACM,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,IAAI,GAAG,YAAY;IAExB,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;EAEb;EAEAG,QAAQA,CAAEC,CAAC,EAAEC,cAAc,GAAG,IAAIV,OAAO,CAAC,CAAC,EAAG;IAE7C,MAAMW,KAAK,GAAGD,cAAc;IAE5B,IAAKD,CAAC,KAAK,CAAC,EAAG;MAEdE,KAAK,CAACC,IAAI,CAAE,IAAI,CAACP,EAAG,CAAC;IAEtB,CAAC,MAAM;MAENM,KAAK,CAACC,IAAI,CAAE,IAAI,CAACP,EAAG,CAAC,CAACQ,GAAG,CAAE,IAAI,CAACT,EAAG,CAAC;MACpCO,KAAK,CAACG,cAAc,CAAEL,CAAE,CAAC,CAACM,GAAG,CAAE,IAAI,CAACX,EAAG,CAAC;IAEzC;IAEA,OAAOO,KAAK;EAEb;;EAEA;EACAK,UAAUA,CAAEC,CAAC,EAAEP,cAAc,EAAG;IAE/B,OAAO,IAAI,CAACF,QAAQ,CAAES,CAAC,EAAEP,cAAe,CAAC;EAE1C;EAEAQ,UAAUA,CAAET,CAAC,EAAEC,cAAc,GAAG,IAAIV,OAAO,CAAC,CAAC,EAAG;IAE/C,OAAOU,cAAc,CAACS,UAAU,CAAE,IAAI,CAACd,EAAE,EAAE,IAAI,CAACD,EAAG,CAAC,CAACgB,SAAS,CAAC,CAAC;EAEjE;EAEAC,YAAYA,CAAEJ,CAAC,EAAEP,cAAc,EAAG;IAEjC,OAAO,IAAI,CAACQ,UAAU,CAAED,CAAC,EAAEP,cAAe,CAAC;EAE5C;EAEAE,IAAIA,CAAEU,MAAM,EAAG;IAEd,KAAK,CAACV,IAAI,CAAEU,MAAO,CAAC;IAEpB,IAAI,CAAClB,EAAE,CAACQ,IAAI,CAAEU,MAAM,CAAClB,EAAG,CAAC;IACzB,IAAI,CAACC,EAAE,CAACO,IAAI,CAAEU,MAAM,CAACjB,EAAG,CAAC;IAEzB,OAAO,IAAI;EAEZ;EAEAkB,MAAMA,CAAA,EAAG;IAER,MAAMC,IAAI,GAAG,KAAK,CAACD,MAAM,CAAC,CAAC;IAE3BC,IAAI,CAACpB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACqB,OAAO,CAAC,CAAC;IAC3BD,IAAI,CAACnB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACoB,OAAO,CAAC,CAAC;IAE3B,OAAOD,IAAI;EAEZ;EAEAE,QAAQA,CAAEC,IAAI,EAAG;IAEhB,KAAK,CAACD,QAAQ,CAAEC,IAAK,CAAC;IAEtB,IAAI,CAACvB,EAAE,CAACwB,SAAS,CAAED,IAAI,CAACvB,EAAG,CAAC;IAC5B,IAAI,CAACC,EAAE,CAACuB,SAAS,CAAED,IAAI,CAACtB,EAAG,CAAC;IAE5B,OAAO,IAAI;EAEZ;AAED;AAEA,SAASH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}